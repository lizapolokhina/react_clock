{"version":3,"sources":["Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","today","Date","updateTimeId","updateNameId","this","window","setInterval","setState","console","info","toLocaleTimeString","prevProps","oldName","clockName","newName","props","clearInterval","className","React","Component","getRandomName","value","now","toString","slice","App","isClockShown","hasClock","hideClock","event","preventDefault","showClock","document","addEventListener","removeEventListener","ReactDOM","render","getElementById"],"mappings":"gMAMMA,E,4MACJC,MAAyB,CACvBC,MAAO,IAAIC,M,EAGbC,aAAe,E,EAEfC,aAAe,E,uDAEf,WAA2B,IAAD,OACxBC,KAAKF,aAAeG,OAAOC,aAAY,WACrC,EAAKC,SAAS,CAAEP,MAAO,IAAIC,OAG3BO,QAAQC,KAAK,EAAKV,MAAMC,MAAMU,wBAC7B,O,gCAGL,SAAmBC,GACjB,IAAmBC,EAAYD,EAAvBE,UACWC,EAAYV,KAAKW,MAA5BF,UAEJC,IAAYF,GAEdJ,QAAQC,KAAR,uBAA6BG,EAA7B,eAA2CE,M,kCAI/C,WACET,OAAOW,cAAcZ,KAAKF,gB,oBAG5B,WACE,OACE,8BACE,sBAAKe,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGb,KAAKW,MAAMF,YAGb,YAED,sBAAMI,UAAU,cAAhB,SACGb,KAAKL,MAAMC,MAAMU,gC,GA3CVQ,IAAMC,WAmDXrB,ICrDf,SAASsB,IACP,IAAMC,EAAQpB,KAAKqB,MAAMC,WAAWC,OAAO,GAE3C,MAAM,SAAN,OAAgBH,G,IAMZI,E,4MACJtB,aAAe,E,EAEfJ,MAAyB,CACvBc,UAAW,UACXa,aAAc,EAAKX,MAAMY,U,EAiB3BC,UAAY,SAACC,GACXA,EAAMC,iBACN,EAAKvB,SAAS,CAAEmB,cAAc,K,EAGhCK,UAAY,WACV,EAAKxB,SAAS,CAAEmB,cAAc,K,uDApBhC,WAA2B,IAAD,OACxBtB,KAAKD,aAAeE,OAAOC,aAAY,WACrC,EAAKC,SAAS,CAAEM,UAAWO,QAC1B,MACHY,SAASC,iBAAiB,cAAe7B,KAAKwB,WAC9CI,SAASC,iBAAiB,YAAa7B,KAAK2B,a,kCAG9C,WACE1B,OAAOW,cAAcZ,KAAKD,cAC1B6B,SAASE,oBAAoB,cAAe9B,KAAKwB,WACjDI,SAASC,iBAAiB,YAAa7B,KAAK2B,a,oBAY9C,WACE,OACE,sBAAKd,UAAU,MAAf,UACE,6CACCb,KAAKL,MAAM2B,cAAgB,cAAC,EAAD,CAAOb,UAAWT,KAAKL,MAAMc,mB,GAnC/CK,IAAMC,WAyCTM,ICnDfU,IAASC,OACP,cAAC,EAAD,CAAKT,UAAQ,IACbK,SAASK,eAAe,U","file":"static/js/main.804fa352.chunk.js","sourcesContent":["import React from 'react';\nimport './App.scss';\n\ntype Props = { clockName: string };\ntype State = { today: Date };\n\nclass Clock extends React.Component <Props, State> {\n  state: Readonly<State> = {\n    today: new Date(),\n  };\n\n  updateTimeId = 0;\n\n  updateNameId = 0;\n\n  componentDidMount(): void {\n    this.updateTimeId = window.setInterval(() => {\n      this.setState({ today: new Date() });\n\n      // eslint-disable-next-line no-console\n      console.info(this.state.today.toLocaleTimeString());\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    const { clockName: oldName } = prevProps;\n    const { clockName: newName } = this.props;\n\n    if (newName !== oldName) {\n      // eslint-disable-next-line no-console\n      console.info(`Renamed from ${oldName} to ${newName}`);\n    }\n  }\n\n  componentWillUnmount(): void {\n    window.clearInterval(this.updateTimeId);\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"Clock\">\n          <strong className=\"Clock__name\">\n            {this.props.clockName}\n          </strong>\n\n          {' time is '}\n\n          <span className=\"Clock__time\">\n            {this.state.today.toLocaleTimeString()}\n          </span>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Clock;\n","import React from 'react';\nimport './App.scss';\nimport Clock from './Clock';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\ntype Props = { hasClock: boolean };\ntype State = { clockName: string, isClockShown: boolean };\n\nclass App extends React.Component <Props, State> {\n  updateNameId = 0;\n\n  state: Readonly<State> = {\n    clockName: 'Clock-0',\n    isClockShown: this.props.hasClock,\n  };\n\n  componentDidMount(): void {\n    this.updateNameId = window.setInterval(() => {\n      this.setState({ clockName: getRandomName() });\n    }, 3300);\n    document.addEventListener('contextmenu', this.hideClock);\n    document.addEventListener('mousedown', this.showClock);\n  }\n\n  componentWillUnmount(): void {\n    window.clearInterval(this.updateNameId);\n    document.removeEventListener('contextmenu', this.hideClock);\n    document.addEventListener('mousedown', this.showClock);\n  }\n\n  hideClock = (event: MouseEvent) => {\n    event.preventDefault();\n    this.setState({ isClockShown: false });\n  };\n\n  showClock = () => {\n    this.setState({ isClockShown: true });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        {this.state.isClockShown && <Clock clockName={this.state.clockName} />}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App hasClock />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}